/*
 * Copyright 2007-2013 The Europeana Foundation
 *
 *  Licenced under the EUPL, Version 1.1 (the "Licence") and subsequent versions as approved
 *  by the European Commission;
 *  You may not use this work except in compliance with the Licence.
 *
 *  You may obtain a copy of the Licence at:
 *  http://joinup.ec.europa.eu/software/page/eupl
 *
 *  Unless required by applicable law or agreed to in writing, software distributed under
 *  the Licence is distributed on an "AS IS" basis, without warranties or conditions of
 *  any kind, either express or implied.
 *  See the Licence for the specific language governing permissions and limitations under
 *  the Licence.
 */
package eu.europeana.enrichment.harvester.transform;

import eu.europeana.corelib.definitions.edm.entity.ContextualClass;

import javax.xml.transform.Source;


/**
 * A Transformer interface that converts a custom controlled vocabulary resource to a Europeana Contextual Class
 *
 * @author Yorgos.Mamakis@ europeana.eu
 * @param <T>
 */
public interface XslTransformer<T extends ContextualClass> {

    /**
     * Method that transforms a Controlled Vocabulary resource to a POJO. The steps are 1) convert via XSLT to EDM/XML
     * 2) convert to POJO via extending the <link>Template</link> for each contextual class This method requires that an
     * XSLT between the Controlled Vocabulary and the EDM/XML exists and also that a Template implementation to convert
     * to a POJO is provided
     *
     * @param xsltPath
     * @param resourceUri
     * @param doc
     * @return
     */
    T transform(String xsltPath, String resourceUri, Source doc);

    /**
     * Method that removes any duplicate values generated by the XSLT
     * @param obj The POJO to normalize
     * @return The normalized POJO
     */
    T normalize(T obj);
}
